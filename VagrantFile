Vagrant.configure("2") do |config|

    # Première machine virtuelle
    config.vm.define "ubuntu_box" do |ubuntu|
      ubuntu.vm.box = "generic/ubuntu2204"
      ubuntu.vm.network "private_network", ip: "192.168.134.95"
      ubuntu.vm.provider "virtualbox" do |v|
        v.memory = 4096
        v.cpus = 4
      end

      config.vm.provision "shell", inline: <<-SHELL
      # Générer la clé SSH sur la machine hôte
      ssh-keygen
  
      # Copier la clé SSH vers la machine cible
      ssh-copy-id 192.168.134.95
    SHELL

      ubuntu.vm.provision "shell", inline: <<-SHELL
        # Mise à jour des paquets
        sudo apt-get update
  
        # Installer openssh-server, Git et les dépendances nécessaires
        sudo apt-get install -y openssh-server 

      SHELL
      ubuntu.vm.provision "shell", inline: "ansible-galaxy collection install community.mysql --ignore-errors"
  
      ubuntu.vm.provision "ansible_local" do |ansible|
        ansible.playbook = "OpenVas/playbook.yml"
        ansible.inventory_path = "OpenVas/inventory.ini"
        ansible.compatibility_mode = "2.0"

    end
  
    # Deuxième machine virtuelle
    config.vm.define "debian_box" do |debian|
      debian.vm.box = "debian/buster64"
  
      debian.vm.network "private_network", ip: "192.168.134.96"
      debian.vm.hostname = "wordpress.local"
      debian.vm.provider "virtualbox" do |vb|
        vb.memory = "1024"
        vb.cpus = 1
      end

      config.vm.provision "shell", inline: <<-SHELL
      # Générer la clé SSH sur la machine hôte
      ssh-keygen
  
      # Copier la clé SSH vers la machine cible
      ssh-copy-id 192.168.134.96
    SHELL
  
      debian.vm.provision "shell", inline: <<-SHELL
        sudo apt update
        sudo apt install -y software-properties-common
        sudo apt install -y ansible
        sudo apt install mysql-server
        sudo apt install -y python python-pip python-dev
        sudo pip install --upgrade pip
        sudo pip install pymysql
      SHELL
  
      # Installer la collection community.mysql
      debian.vm.provision "shell", inline: "ansible-galaxy collection install community.mysql --ignore-errors"
  
      debian.vm.provision "ansible_local" do |ansible|
        ansible.playbook = "WordPress/playbook.yml"
        ansible.inventory_path = "WordPress/inventory.ini"
        ansible.compatibility_mode = "2.0"
        ansible.extra_vars = {
          "myuser_password" => "password",
          "mysql_root_password" => "password",
          "mysql_db_name" => "wordpress_db",
          "mysql_db_user" => "wordpress_user",
          "mysql_db_password" => "password"
        }
      end
    end
  end
  